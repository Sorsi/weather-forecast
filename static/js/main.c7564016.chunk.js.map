{"version":3,"sources":["components/Cities.js","capitals.js","components/Seach.js","components/Weather.js","App.js","reportWebVitals.js","app/reducer.js","app/store.js","index.js"],"names":["Cities","cities","useSelector","state","dispatch","useDispatch","_jsxs","className","children","_jsx","map","city","value","onClick","type","payload","handleCityClick","Link","to","capitals","Search","_useState","useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","selectedCity","setSelectedCity","listedCapitals","filter","capital","includes","toLowerCase","slice","isBtnVisible","getHighlightedText","text","regex","RegExp","concat","replace","FontAwesomeIcon","icon","faAngleLeft","onChange","e","target","placeholder","listedCapital","i","dangerouslySetInnerHTML","__html","disabled","iconMapping","Weather","weatherDetails","setWeather","fetchWeather","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","process","method","sent","ok","Error","json","t0","console","error","stop","apply","arguments","useEffect","name","main","sys","weather","currentTime","setCurrentTime","timeZoneOffset","timezone","interval","setInterval","currentTimestamp","Date","now","toLocaleTimeString","hour","minute","timeZone","clearInterval","description","temp","moment","utc","sunrise","add","format","sunset","App","Router","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","rootReducer","length","undefined","action","_objectSpread","_toConsumableArray","store","configureStore","reducer","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"mOA4BeA,EAxBA,WACX,IAAMC,EAASC,aAAY,SAACC,GAAK,OAAKA,EAAMF,UACtCG,EAAWC,cAQjB,OACIC,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC7BC,cAAA,MAAAD,SACKP,EAAOS,KAAI,SAACC,GAAI,OACbF,cAAA,MAAeG,MAAOD,EAAME,QAAS,YAX7B,SAACF,GACrBP,EAAS,CACLU,KAAM,cACNC,QAASJ,IAQ4CK,CAAgBL,IAAQH,SACjEC,cAACQ,IAAI,CAACC,GAAG,WAAUV,SAAEG,KADhBA,QAKjBF,cAACQ,IAAI,CAACV,UAAU,YAAYW,GAAG,UAASV,SAAC,U,OCvBxCW,EAAW,CACpB,QACA,YACA,SACA,UACA,YACA,mBACA,SACA,eACA,eACA,UACA,aACA,WACA,SACA,OACA,SACA,SACA,QACA,aACA,QACA,WACA,WACA,aACA,UACA,SACA,QACA,WACA,WACA,WACA,YACA,sBACA,QACA,cACA,SACA,QACA,aACA,UACA,SACA,SACA,YACA,WACA,UACA,SACA,SACA,SACA,SACA,SACA,aACA,UACA,SACA,WACA,aACA,WACA,SACA,gBACA,QACA,QACA,eACA,SACA,SACA,UACA,UACA,cACA,WACA,OACA,WACA,QACA,UACA,UACA,aACA,SACA,UACA,SACA,QACA,YACA,SACA,OACA,iBACA,cACA,iBACA,mBACA,UACA,SACA,aACA,iBACA,cACA,YACA,WACA,YACA,QACA,UACA,SACA,UACA,SACA,UACA,YACA,OACA,eACA,WACA,QACA,eACA,QACA,SACA,UACA,SACA,WACA,SACA,UACA,YACA,OACA,SACA,SACA,WACA,UACA,QACA,UACA,aACA,QACA,eACA,WACA,eACA,OACA,SACA,WACA,SACA,iBACA,aACA,aACA,YACA,cACA,WACA,SACA,aACA,YACA,QACA,SACA,cACA,WACA,YACA,YACA,SACA,aACA,UACA,SACA,QACA,YACA,SACA,SACA,OACA,SACA,YACA,SACA,eACA,WACA,OACA,SACA,SACA,SACA,OACA,cACA,cACA,YACA,SACA,SA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","file":"static/js/main.c7564016.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Cities = () => {\r\n    const cities = useSelector((state) => state.cities);\r\n    const dispatch = useDispatch();\r\n    const handleCityClick = (city) => {\r\n        dispatch({\r\n            type: 'SELECT_CITY',\r\n            payload: city,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className='cities-container'>\r\n            <ul>\r\n                {cities.map((city) => (\r\n                    <li key={city} value={city} onClick={() => { handleCityClick(city) }}>\r\n                        <Link to='/weather'>{city}</Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <Link className='plus-sign' to=\"/search\">+</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cities;","export const capitals = [\r\n    \"Kabul\",\r\n    \"Mariehamn\",\r\n    \"Tirana\",\r\n    \"Algiers\",\r\n    \"Pago Pago\",\r\n    \"Andorra la Vella\",\r\n    \"Luanda\",\r\n    \"Saint John's\",\r\n    \"Buenos Aires\",\r\n    \"Yerevan\",\r\n    \"Oranjestad\",\r\n    \"Canberra\",\r\n    \"Vienna\",\r\n    \"Baku\",\r\n    \"Nassau\",\r\n    \"Manama\",\r\n    \"Dhaka\",\r\n    \"Bridgetown\",\r\n    \"Minsk\",\r\n    \"Brussels\",\r\n    \"Belmopan\",\r\n    \"Porto-Novo\",\r\n    \"Thimphu\",\r\n    \"La Paz\",\r\n    \"Sucre\",\r\n    \"Sarajevo\",\r\n    \"Gaborone\",\r\n    \"Brasilia\",\r\n    \"Road Town\",\r\n    \"Bandar Seri Begawan\",\r\n    \"Sofia\",\r\n    \"Ouagadougou\",\r\n    \"Gitega\",\r\n    \"Praia\",\r\n    \"Phnom Penh\",\r\n    \"Yaounde\",\r\n    \"Ottawa\",\r\n    \"Bangui\",\r\n    \"N'Djamena\",\r\n    \"Santiago\",\r\n    \"Beijing\",\r\n    \"Bogota\",\r\n    \"Moroni\",\r\n    \"Avarua\",\r\n    \"Zagreb\",\r\n    \"Havana\",\r\n    \"Willemstad\",\r\n    \"Nicosia\",\r\n    \"Prague\",\r\n    \"Kinshasa\",\r\n    \"Copenhagen\",\r\n    \"Djibouti\",\r\n    \"Roseau\",\r\n    \"Santo Domingo\",\r\n    \"Quito\",\r\n    \"Cairo\",\r\n    \"San Salvador\",\r\n    \"Malabo\",\r\n    \"Asmara\",\r\n    \"Tallinn\",\r\n    \"Mbabane\",\r\n    \"Addis Ababa\",\r\n    \"Torshavn\",\r\n    \"Suva\",\r\n    \"Helsinki\",\r\n    \"Paris\",\r\n    \"Cayenne\",\r\n    \"Papeete\",\r\n    \"Libreville\",\r\n    \"Banjul\",\r\n    \"Tbilisi\",\r\n    \"Berlin\",\r\n    \"Accra\",\r\n    \"Gibraltar\",\r\n    \"Athens\",\r\n    \"Nuuk\",\r\n    \"Saint George's\",\r\n    \"Basse-Terre\",\r\n    \"Guatemala City\",\r\n    \"Saint Peter Port\",\r\n    \"Conakry\",\r\n    \"Bissau\",\r\n    \"Georgetown\",\r\n    \"Port-au-Prince\",\r\n    \"Tegucigalpa\",\r\n    \"Hong Kong\",\r\n    \"Budapest\",\r\n    \"Reykjavik\",\r\n    \"Delhi\",\r\n    \"Jakarta\",\r\n    \"Tehran\",\r\n    \"Baghdad\",\r\n    \"Dublin\",\r\n    \"Douglas\",\r\n    \"Jerusalem\",\r\n    \"Rome\",\r\n    \"Yamoussoukro\",\r\n    \"Kingston\",\r\n    \"Tokyo\",\r\n    \"Saint Helier\",\r\n    \"Amman\",\r\n    \"Almaty\",\r\n    \"Nairobi\",\r\n    \"Tarawa\",\r\n    \"Pristina\",\r\n    \"Kuwait\",\r\n    \"Bishkek\",\r\n    \"Vientiane\",\r\n    \"Riga\",\r\n    \"Beirut\",\r\n    \"Maseru\",\r\n    \"Monrovia\",\r\n    \"Tripoli\",\r\n    \"Vaduz\",\r\n    \"Vilnius\",\r\n    \"Luxembourg\",\r\n    \"Macau\",\r\n    \"Antananarivo\",\r\n    \"Lilongwe\",\r\n    \"Kuala Lumpur\",\r\n    \"Male\",\r\n    \"Bamako\",\r\n    \"Valletta\",\r\n    \"Majuro\",\r\n    \"Fort-de-France\",\r\n    \"Nouakchott\",\r\n    \"Port Louis\",\r\n    \"Mamoudzou\",\r\n    \"Mexico City\",\r\n    \"Chisinau\",\r\n    \"Monaco\",\r\n    \"Ulan Bator\",\r\n    \"Podgorica\",\r\n    \"Rabat\",\r\n    \"Maputo\",\r\n    \"Nay Pyi Taw\",\r\n    \"Windhoek\",\r\n    \"Kathmandu\",\r\n    \"Amsterdam\",\r\n    \"Noumea\",\r\n    \"Wellington\",\r\n    \"Managua\",\r\n    \"Niamey\",\r\n    \"Abuja\",\r\n    \"Pyongyang\",\r\n    \"Skopje\",\r\n    \"Saipan\",\r\n    \"Oslo\",\r\n    \"Muscat\",\r\n    \"Islamabad\",\r\n    \"Panama\",\r\n    \"Port Moresby\",\r\n    \"Asuncion\",\r\n    \"Lima\",\r\n    \"Manila\",\r\n    \"Warsaw\",\r\n    \"Lisbon\",\r\n    \"Doha\",\r\n    \"Brazzaville\",\r\n    \"Saint-Denis\",\r\n    \"Bucharest\",\r\n    \"Moscow\",\r\n    \"Kigali\",\r\n    \"Gustavia\",\r\n    \"Basseterre\",\r\n    \"Castries\",\r\n    \"Marigot\",\r\n    \"Kingstown\",\r\n    \"Apia\",\r\n    \"Sao Tome\",\r\n    \"Riyadh\",\r\n    \"Dakar\",\r\n    \"Belgrade\",\r\n    \"Freetown\",\r\n    \"Singapore\",\r\n    \"Bratislava\",\r\n    \"Ljubljana\",\r\n    \"Honiara\",\r\n    \"Mogadishu\",\r\n    \"Cape Town\",\r\n    \"Pretoria\",\r\n    \"Seoul\",\r\n    \"Juba\",\r\n    \"Madrid\",\r\n    \"Colombo\",\r\n    \"Khartoum\",\r\n    \"Paramaribo\",\r\n    \"Stockholm\",\r\n    \"Bern\",\r\n    \"Damascus\",\r\n    \"Taipei\",\r\n    \"Dushanbe\",\r\n    \"Dodoma\",\r\n    \"Bangkok\",\r\n    \"Dili\",\r\n    \"Lome\",\r\n    \"Nuku'alofa\",\r\n    \"Port of Spain\",\r\n    \"Tunis\",\r\n    \"Istanbul\",\r\n    \"Ashgabat\",\r\n    \"Funafuti\",\r\n    \"Charlotte Amalie\",\r\n    \"Kampala\",\r\n    \"Kyiv\",\r\n    \"Abu Dhabi\",\r\n    \"London\",\r\n    \"Washington\",\r\n    \"Montevideo\",\r\n    \"Tashkent\",\r\n    \"Port-Vila\",\r\n    \"Caracas\",\r\n    \"Hanoi\",\r\n    \"Sanaa\",\r\n    \"Lusaka\",\r\n    \"Harare\"\r\n  ];","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { capitals } from '../capitals';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Search = () => {\r\n    const dispatch = useDispatch();\r\n    const cities = useSelector((state) => state.cities);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCity, setSelectedCity] = useState('');\r\n    const listedCapitals = capitals.filter((capital) => !cities.includes(capital)).filter((capital) => capital.toLowerCase().includes(searchTerm.toLowerCase())).slice(0, 8);\r\n    const isBtnVisible = selectedCity !== '';\r\n\r\n    const getHighlightedText = (text) => {\r\n        const regex = new RegExp(`(${searchTerm})`, 'gi');\r\n        return text.replace(regex, '<span class=\"highlight\">$1</span>');\r\n    };\r\n\r\n    const saveCity = () => {\r\n        if (searchTerm && !cities.includes(searchTerm)) {\r\n            dispatch({\r\n                type: 'ADD_CITY',\r\n                payload: searchTerm,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleCityClick = (capital) => {\r\n        setSearchTerm(capital);\r\n        setSelectedCity(capital);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\" className='angle-icon'><FontAwesomeIcon icon={faAngleLeft} /></Link>\r\n            <div className='search-container'>\r\n                <input\r\n                    className='input-field'\r\n                    type='text'\r\n                    onChange={e => setSearchTerm(e.target.value)}\r\n                    value={searchTerm}\r\n                    placeholder='Start to type a capital city...' />\r\n                <ul className='capitals-list'>\r\n                    {listedCapitals.map((listedCapital, i) => (\r\n                        <li key={i} onClick={() => handleCityClick(listedCapital)}>\r\n                            <span dangerouslySetInnerHTML={{ __html: getHighlightedText(listedCapital) }} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                {isBtnVisible && (\r\n                    <button disabled={!searchTerm} className='save-btn' onClick={saveCity}>Save</button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport moment from 'moment'\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconst iconMapping = {\r\n    'clear sky': 'wi-day-sunny',\r\n    'few clouds': 'wi-day-cloudy',\r\n    'scattered clouds': 'wi-cloud',\r\n    'broken clouds': 'wi-cloudy',\r\n    'shower rain': 'wi-showers',\r\n    'rain': 'wi-rain',\r\n    'thunderstorm': 'wi-thunderstorm',\r\n    'snow': 'wi-snowflake-cold',\r\n    'mist': 'wi-fog',\r\n};\r\n\r\nconst Weather = () => {\r\n    const cities = useSelector((state) => state.cities);\r\n    const [weatherDetails, setWeather] = useState('');\r\n    const city = useSelector((state) => state.selectedCity);\r\n\r\n    const fetchWeather = async () => {\r\n        try {\r\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`, {\r\n                method: 'GET',\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const data = await response.json();\r\n            setWeather(data);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchWeather();\r\n    }, [cities]);\r\n\r\n    const { name, main, sys, weather } = weatherDetails;\r\n    const [currentTime, setCurrentTime] = useState('');\r\n    const timeZoneOffset = weatherDetails.timezone;\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentTimestamp = Date.now() / 1000 + timeZoneOffset;\r\n            setCurrentTime(new Date(currentTimestamp * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', timeZone: 'UTC' }));\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, [timeZoneOffset]);\r\n\r\n    if (!weatherDetails) {\r\n        return <div className='loading'>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='angle-icon'><FontAwesomeIcon icon={faAngleLeft} /></Link>\r\n            <div className='weather-container'>\r\n                <div className='time'>{currentTime}</div>\r\n                <h2 className='city'>{name}</h2>\r\n                <i className={`wi ${iconMapping[weather[0].description]} weather-icon`}></i>\r\n                <p className='weather-description'>{weather[0].description}</p>\r\n                <div className='temp-data-wrapper'>\r\n                    <i className=\"wi wi-thermometer temp-icon\"></i>\r\n                    <span className='temp-data'>{main.temp}</span>\r\n                    <span className='celsius-sign'>°C</span>\r\n                </div>\r\n                <div className='temp-data-wrapper'>\r\n                    <i className=\"wi wi-sunrise temp-icon\"></i>\r\n                    <span className='temp-data'>{moment.utc(sys.sunrise, 'X').add(timeZoneOffset, 'seconds').format('HH:mm')}</span>\r\n                </div>\r\n                <div className='temp-data-wrapper'>\r\n                    <i className=\"wi wi-sunset temp-icon\"></i>\r\n                    <span className='temp-data'>{moment.utc(sys.sunset, 'X').add(timeZoneOffset, 'seconds').format('HH:mm')}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather;","import './App.css';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Cities from './components/Cities';\r\nimport Search from './components/Seach';\r\nimport Weather from './components/Weather';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<Cities />} />\r\n        <Route exact path=\"/search\" element={<Search />} />\r\n        <Route exact path=\"/weather\" element={<Weather />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initState = {\r\n    cities: ['Budapest'],\r\n    selectedCity: 'Budapest',\r\n};\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_CITY':\r\n            return {\r\n                ...state,\r\n                cities: [...state.cities, action.payload],\r\n            };\r\n        case 'SELECT_CITY':\r\n            return {\r\n                ...state,\r\n                selectedCity: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rootReducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport rootReducer from './reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}